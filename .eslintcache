[{"D:\\project\\reactpro\\code\\src\\App.js":"1","D:\\RAJESH\\project\\reactpro\\code\\src\\index.js":"2","D:\\RAJESH\\project\\reactpro\\code\\src\\reportWebVitals.js":"3","D:\\RAJESH\\project\\reactpro\\code\\src\\App.js":"4","D:\\RAJESH\\project\\reactpro\\code\\src\\actions\\store.js":"5","D:\\RAJESH\\project\\reactpro\\code\\src\\components\\PostMessages.js":"6","D:\\RAJESH\\project\\reactpro\\code\\src\\reducers\\index.js":"7","D:\\RAJESH\\project\\reactpro\\code\\src\\actions\\postMessage.js":"8","D:\\RAJESH\\project\\reactpro\\code\\src\\components\\PostMessangeForm.js":"9","D:\\RAJESH\\project\\reactpro\\code\\src\\reducers\\postMessage.js":"10","D:\\RAJESH\\project\\reactpro\\code\\src\\actions\\api.js":"11"},{"size":658,"mtime":1613579284153,"results":"12","hashOfConfig":"13"},{"size":500,"mtime":1610087118923,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":671,"mtime":1613754121016,"results":"17","hashOfConfig":"15"},{"size":222,"mtime":1610169717042,"results":"18","hashOfConfig":"15"},{"size":3107,"mtime":1613755017356,"results":"19","hashOfConfig":"15"},{"size":141,"mtime":1610169724944,"results":"20","hashOfConfig":"15"},{"size":442,"mtime":1613233376842,"results":"21","hashOfConfig":"15"},{"size":4559,"mtime":1613976048050,"results":"22","hashOfConfig":"15"},{"size":391,"mtime":1613755557739,"results":"23","hashOfConfig":"15"},{"size":433,"mtime":1613232210698,"results":"24","hashOfConfig":"15"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vdlmmy",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1ueymvv",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","errorCount":6,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"D:\\project\\reactpro\\code\\src\\App.js",[],"D:\\RAJESH\\project\\reactpro\\code\\src\\index.js",[],["52","53"],"D:\\RAJESH\\project\\reactpro\\code\\src\\reportWebVitals.js",[],"D:\\RAJESH\\project\\reactpro\\code\\src\\App.js",[],"D:\\RAJESH\\project\\reactpro\\code\\src\\actions\\store.js",[],"D:\\RAJESH\\project\\reactpro\\code\\src\\components\\PostMessages.js",["54","55"],"//33\r\nimport { Grid, List, ListItem, ListItemText, Paper ,Typography,withStyles,Divider} from '@material-ui/core';\r\nimport React, { useEffect, Fragment,useState } from 'react';\r\nimport {connect } from 'react-redux'\r\nimport * as actions from \"../actions/postMessage\";\r\nimport PostMessageForm from \"./PostMessangeForm\";\r\n\r\nconst styles=theme=>({\r\n    paper:{\r\n        margin:theme.spacing(4),\r\n        padding:theme.spacing(3),\r\n      \r\n        //  display:'flex',\r\n        // position:\"relative\",\r\n         flexWrap: 'wrap',\r\n        // justifyContent: 'center',\r\n       \r\n    }\r\n})\r\nconst PostMessages=({classes,...props})=>{\r\n    // const [x,setx]=useState(0)\r\n    // setx(5)\r\n    useEffect( ()=>{\r\n        props.fetchAllPostMessages()         \r\n    },[]);// empty array is equal to didmount in class based component\r\n    return (\r\n        <Grid container>\r\n            <Grid >\r\n                <Paper className={classes.paper}> \r\n                 <PostMessageForm/>\r\n                 </Paper>\r\n            </Grid> \r\n            <Grid >\r\n                <Paper className={classes.paper}> \r\n                 <List>\r\n                     {\r\n                         props.postMessageList.map((newrecord,index)=>{\r\n                             return(\r\n                                 <Fragment key={index}>\r\n                                 <ListItem>\r\n                                    <ListItemText>\r\n                                        <Typography varient=\"h5\" >\r\n                                            {\r\n                                                newrecord.name\r\n                                            }\r\n                                            </Typography>\r\n                                            <div>\r\n                                                {newrecord.address}\r\n                                            </div>\r\n                                            <div>\r\n                                                {newrecord.dob}\r\n                                            </div>\r\n                                            <div>\r\n                                                {newrecord.email}\r\n                                            </div>\r\n                                            <div>\r\n                                                {newrecord.phoneno}\r\n                                            </div>\r\n                                            </ListItemText> \r\n                                 </ListItem>\r\n                                 <Divider component='li'></Divider>\r\n                                 </Fragment>\r\n                             )\r\n                         }\r\n                         )\r\n                     }\r\n                 </List>\r\n                 </Paper>\r\n            </Grid> \r\n        </Grid>\r\n    );\r\n}\r\nconst mapStateToProps=state=>({\r\n   postMessageList:state.postMessage.list\r\n})\r\nconst mapActionToProps={\r\n    fetchAllPostMessages:actions.fetchAll\r\n}// access  with props.fetchAllPostMessage\r\n\r\n//1:4hour\r\nexport default connect(mapStateToProps,mapActionToProps)(withStyles(styles)(PostMessages));","D:\\RAJESH\\project\\reactpro\\code\\src\\reducers\\index.js",[],"D:\\RAJESH\\project\\reactpro\\code\\src\\actions\\postMessage.js",[],"D:\\RAJESH\\project\\reactpro\\code\\src\\components\\PostMessangeForm.js",["56","57","58","59","60","61","62","63"],"import React, { useState } from 'react';\r\nimport { withStyles} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nconst styles=theme=>({\r\n    div:{\r\n        margin:theme.spacing(4),\r\n        padding:theme.spacing(3),\r\n        // position:\"relative\",\r\n        // display:'flex',\r\n        // flexWrap: 'wrap',\r\n        // justifyContent: 'center'\r\n    }\r\n})\r\nconst intialFieldValues={\r\n    name:\" \",\r\n    address:\" \",\r\n    dob:\" \",\r\n    email:\" \",\r\n    phoneno:\" \",\r\n    password:\" \"\r\n}\r\n\r\nconst PostMessageForm=({classes,...props})=>{\r\n    const [values,setvalues]=useState(intialFieldValues)\r\n\r\n    return (\r\n    <div className={classes.div} >\r\n        {/* from post messages FORM */}\r\n        <form autoComplete=\"off\">\r\n        <TextField required id=\"standard-required\" label=\"name\"\r\n         defaultValue=\"Your Name\" value={values.name} />\r\n         <TextField required id=\"standard-required\" label=\"address\"\r\n         defaultValue=\"Your Address\" value={values.address} />\r\n        <TextField\r\n         id=\"date\"\r\n         label=\"dob\"\r\n         type=\"date\"\r\n         defaultValue=\" \"\r\n         className={classes.textField}\r\n         InputLabelProps={{\r\n         shrink: true,\r\n         }}\r\n         />\r\n          <TextValidator\r\n                    label=\"email\"\r\n                    onChange={this.handleChange}\r\n                    name=\"email\"\r\n                    value={formData.email}\r\n                    validators={['required', 'isEmail']}\r\n                    errorMessages={['this field is required', 'email is not valid']}\r\n                />\r\n          <TextField\r\n          id=\"standard-number\"\r\n          label=\"phoneno\"\r\n          type=\"number\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n           }}\r\n           />\r\n            <FormControl className={clsx(classes.margin, classes.textField)}>\r\n          <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\r\n          <Input\r\n            id=\"standard-adornment-password\"\r\n            type={values.showPassword ? 'text' : 'password'}\r\n            value={values.password}\r\n            onChange={handleChange('password')}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                >\r\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n\r\n\r\n\r\n\r\n\r\n          {/* <div id=\"a\">\r\n          \r\n          <label id=\"n\">Name:</label>\r\n          <input type=\"text\" id=\"name1\" name=\"name\" value={values.name}></input>\r\n          <br>\r\n          </br>\r\n          </div>\r\n          <div id=\"a\">\r\n          <label id=\"n\">Address      :</label>\r\n          <input type=\"text\" id=\"address1\" name=\"address\" value={values.address}></input>\r\n          <br>\r\n          </br>\r\n          </div>\r\n          <div id=\"a\">\r\n          <label id=\"n\">Date Of Birth:</label>\r\n          <input type=\"date\" id=\"dob1\" name=\"dob\" value={values.dob}></input>\r\n          <br>\r\n          </br></div>\r\n          <div id=\"a\">\r\n          <label id=\"n\">Email        :</label>\r\n          <input type=\"email\" id=\"em\" name=\"email\" value={values.email}></input>\r\n          <br>\r\n          </br>\r\n          </div>\r\n          <div id=\"a\">\r\n          <label id=\"n\">Phone No     :</label>\r\n          <input type=\"tel\" id=\"ph\" name=\"phoneno\" value={values.phoneno}></input>\r\n          <br>\r\n          </br></div>\r\n          <div id=\"a\">\r\n          <label id=\"n\">Password:  </label>\r\n          <input type=\"password\"id=\"password\" name=\"password\" value={values.password}></input>\r\n          <br>\r\n          </br>\r\n          <div id=\"a\">\r\n          <button id=\"bu\"onClick={()=>this.change()}>submit</button>\r\n         \r\n          </div>\r\n        </div>*/}\r\n         \r\n          </form>\r\n        </div>) \r\n}\r\n//1.26\r\n export default (withStyles(styles)(PostMessageForm));","D:\\RAJESH\\project\\reactpro\\code\\src\\reducers\\postMessage.js",[],"D:\\RAJESH\\project\\reactpro\\code\\src\\actions\\api.js",["64"],"import axios from 'axios'\r\n\r\nconst baseurl='http://localhost:4000/'\r\n \r\nexport default \r\n{\r\n    postMessage(url=baseurl+'stu/'){\r\n        return {\r\n            fetchAll:()=>axios.get(url),\r\n            fetchById: id=> axios.get(url+id),\r\n            create:newrecord=>axios.post(url,newrecord),\r\n            update:(id,updatedrecord)=>axios.put(url+id,updatedrecord),\r\n            delete:id=>axios.delete(url+id)\r\n        }\r\n    }\r\n}",["65","66"],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":3,"column":37,"nodeType":"73","messageId":"74","endLine":3,"endColumn":45},{"ruleId":"75","severity":1,"message":"76","line":25,"column":7,"nodeType":"77","endLine":25,"endColumn":9,"suggestions":"78"},{"ruleId":"71","severity":1,"message":"79","line":4,"column":10,"nodeType":"73","messageId":"74","endLine":4,"endColumn":23},{"ruleId":"71","severity":1,"message":"80","line":31,"column":19,"nodeType":"73","messageId":"74","endLine":31,"endColumn":28},{"ruleId":"81","severity":2,"message":"82","line":55,"column":28,"nodeType":"73","messageId":"83","endLine":55,"endColumn":36},{"ruleId":"81","severity":2,"message":"84","line":67,"column":37,"nodeType":"73","messageId":"83","endLine":67,"endColumn":41},{"ruleId":"85","severity":2,"message":"86","line":69,"column":12,"nodeType":"87","endLine":69,"endColumn":17},{"ruleId":"81","severity":2,"message":"88","line":73,"column":23,"nodeType":"73","messageId":"83","endLine":73,"endColumn":35},{"ruleId":"81","severity":2,"message":"89","line":78,"column":28,"nodeType":"73","messageId":"83","endLine":78,"endColumn":51},{"ruleId":"81","severity":2,"message":"90","line":79,"column":32,"nodeType":"73","messageId":"83","endLine":79,"endColumn":55},{"ruleId":"91","severity":1,"message":"92","line":5,"column":1,"nodeType":"93","endLine":16,"endColumn":2},{"ruleId":"67","replacedBy":"94"},{"ruleId":"69","replacedBy":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["98"],"'ValidatorForm' is defined but never used.","'setvalues' is assigned a value but never used.","no-undef","'formData' is not defined.","undef","'clsx' is not defined.","react/jsx-no-undef","'Input' is not defined.","JSXIdentifier","'handleChange' is not defined.","'handleClickShowPassword' is not defined.","'handleMouseDownPassword' is not defined.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["96"],["97"],"no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},"Update the dependencies array to be: [props]",{"range":"101","text":"102"},[753,755],"[props]"]